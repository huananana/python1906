# 1.shell字符串
# shell字符串在表示的时候可以用单引号、双引号，也可以不加引号
str1=abc
str2='abc'
str3="abc"

# 1)没有引号的字符串中不能出现引号;
#str11=ab"c             # 报错！
#echo $str11

# 2)单引号的字符串内容中不能出现单引号字符(加转义/不行)
str22='abc"123'
echo 单引号内容中不能出现单引号 $str22

str33='abc'13''
echo 单引号内容中不能出现双引号 $str33

# 3)双引号字符串中既可以出现单引号也可以出现双引号(加\)
str4="abc'1234"
echo 双引号内容中的单引号 $str4

str5="abc\"123"
echo 双引号内容中的单引号 $str5

# 1.2字符串拼接(最好使用双引号拼接)
str1='hello'
str2='world'
str3=${str1}${str2}
echo $str3

str4="${str1} ${str2}"
echo $str4

#1.3获取字符串长度：${#字符串变量}
length=${#str1}
echo str1的字符串长度 $length

# 1.4字符串提取(获取字符)
# 语法1：${字符串变量:开始下标:个数}    -       从字符串指定下标开始获取指定个数
string='how are you!'
echo 获取string中\'are\'字符串: ${string:4:3}

# 语法2：${字符串变量:开始下标:1}       -       获取字符串指定下标对应的字符
echo ${string:2:1}      # w

# 语法3：${字符串变量:开始下标}         -       从开始下标开始过去，渠道字符串最后一个字符为止
echo ${string:2}        # w are you!

echo =======================数组=======================
# 2.shell数组
# 2.1数组的表示
# 数组是容器型数据类型，一个数组中可以保存多个数据；数据类型可以不同
# 数组的表示方式: 用()表示数组，数组中的元素用空格隔开  -       (元素1 元素2 ...)
arr1=("abc" 100 1.1)
names=("小明" "大名" "忠明" "特大名" "特效名" "中种名" "Jack")
scores=(
90
100
101
102)


# 注意：直接获取数组变量的值取到是数组的第一个元素
echo $arr1
echo $names

# 2.2获取数组元素
# 语法1：${数组[下标]}  -       获取数组指定下标对应的元素
echo 下标是1的元素：${names[1]}

# 注意：下标越界不会报错，但是结果是空的
echo 下表不存在的元素：${names[100]}

# 语法2：${数组[@]} 或者 ${数组[*]}     -       获取数组中所有的元素
echo 获取所有元素：${names[*]}
echo 获取所有的元素：${names[@]}

# 2.3获取数组长度
# 语法：${$数组[*]} 或者 ${#数组[@]}    -       获取数组元素的个数
musics=("爱情买卖" "月亮之上")
len=${#musics[*]}
echo 数组长度：$len

# 2.4添加元素和修改元素
# 语法：数组[下标]=值
# 下标对应的元素存在就是修改
musics[4]=生僻字
echo 查看添加的数组元素${musics[*]}
