# python支持的运算符：数学运算符、比较运算符、逻辑运算符、赋值运算、位运算

# 1.数学运算符：+、-、*、/、%、//、**
'''
asdfadsfsdafsadf阿斯蒂芬撒旦
'''

'''
1) +-*/ 顾名思义，不解释
2）% 求余算法（取余/取模） 10%2 = 0 ；5%2 = 1；  8%3 = 2
    **小数也可以求余
    -应用1：判断奇偶性
    -应用2：是否整除
    -应用3：取低位数；
3）// 整除（商只取整数部分）10//2 = 5 ；5//2 = 2 ；8//3 = 2
    -应用：取高位
4）** 幂运算； x**y == 求x的y次方  
'''

# 2.比较运算符：<、>、==、!=、<=、>=
'''
**所有比较运算结果都是布尔值
**python可以连写 ： print(18 < age < 28)
'''

# 3.逻辑运算符：and or not/雨惑妃
# 逻辑运算符的运算对象和结果一般都是布尔值
# 1）and
'''
运算规则：两个都是True结果才是True，只要有一个是False结果就是False
True and True -> True
...
使用场景：需要多个条件同时满足，就用and；相当于生活中的并且
'''
gpa = 4.5
score = 90

# 获取奖学金的条件 ：绩点不低于4并且操评分高于95
print('是否能够获取经学金：', gpa >= 4 and score > 95)

# 练习：判断一个数是否能够同时被3和7整除
num = 35
print('是否能够同时被3和7整除：', num % 3 == 0 and num % 7 == 0)

# 2）or
'''
运算规则:两个都是False结果才是False，只要有一个是True结果就是True
True or True ->  True
True or False -> True
False or True -> True
False or False -> False
使用场景：需要多个条件中有一个条件满足就行，就是用or;像防御生活中的or
'''
gpa = 4.5
score = 98
# 获取奖学金的条件：绩点不低于4或者操评分高于95
print('是否获取奖学金：',gpa >= 4 or score > 95)

# 3) not
"""
运算规则：True变False， False变True
not True -> False
not False ->True
使用场景：对某一个条件进行否定
"""

# 一个数不能同时被3和7整除的条件
num = 14
print('不能同时被3和7整除：', not (num % 3 == 0 and num % 7 == 0))

# 4)短路操作
"""
and的短路操作：条件1 and 条件2 -> and前面的那个条件如果结果是False，那么后面的条件语句不会执行，结果直接是False
or的短路操作：条件1 or 条件2 -> or前面的那个田间如果是True，那么后面的条件语句不会执行，结果直接是True
"""

def func1():
    print('函数被执行了')

False and func1()
True or func1()

# 4.赋值运算符：=，+=，-=，*=、%=、**=、//=
"""
所有的赋值运算符的左边必须是变量；组合赋值运算符的左边除了是变量，这个变量还必须是已经声明过的
"""
# 1）变量 = 数据 -> 将右边的值赋给右边的变量
a = 10
b = 10 * 2
c = a
d = a + b
a = 100

# 2)组合赋值运算符
# 变量 += 值 -> 变量 = 变量 + 值

# 5).运算顺序
"""
运算符优先级：
数学运算符 > 比较运算符 > 逻辑运算符 > 赋值运算符
** > * > / > // > % > + > -
如果有括号，先算括号里面的
"""

num = 213
hundred_digit = num // 100
ten_digit = num % 100 // 10
one_digit = num % 10
print(hundred_digit,'百',ten_digit,'十',one_digit,"个")

num = input('任意数>>>')
num[1]
print(num[1])