# 计算机底层存储数据只能存数字，并且存的是数字的补码

# 计算机内存大小（最小单位是位）：
'''
1 bytes(字节) = 8 bit(位)
1Kb = 1024 bytes
1Mb = 1024 Kb
1G = 1024 Mb
1T = 1024 G
2**10 = 1024
'''

# 1.原码
# 原码 = 符号位 + 数字对应的二进制 （原码就是在数字的二进制的最前面加上符号位）
# 符号位上0表示正，1表示负
# 整数的原码反码补码都是一样的，都是原码
'''
10(10) -> 1010(2)
10(10) -> 00001010(原码)
-10(10) -> 10001010(原码)
'''

# 2.反码
# 原码的符号位不变，其它的位全部取反（0变1，1变0）
'''
-10 -> 10001010(原) -> 11110101(反)
'''

# 3.补码
# 补码就是反码加1
# 为什么计算机存负数的时候要存补码：计算机只有加法器，只能进行加运算，负数进行运算的时候用原码不能正确运算，只有补码才行

'''
-10 -> 10001010(原) -> 11110101(反) -> 11110110(补)
130的补码：00000000100000010
-130的补码：10000000100000010() -> 111111111101111101() -> 1111111101111110
-5-2 = -7 
'''


